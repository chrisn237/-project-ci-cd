name: CI/CD Pipeline

# Déclenche le pipeline à chaque push, pull request et lors d'un tag
on:
  push:
    branches: [ main ]
    tags: '*'  # Déclenche le pipeline pour tous les tags
  pull_request:
    branches: [ main ]

jobs:
  # Étape Setup (Préparation des dépendances et build)
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          if [ -f package.json ]; then
            npm install
          else
            echo "package.json non trouvé."
            exit 1
          fi

      - name: Save node_modules as artifact
        uses: actions/upload-artifact@v3
        with:
          name: node_modules
          path: node_modules  # Spécifiez explicitement le dossier node_modules à la racine

  # Étape Test 1 (utilise les dépendances de l'étape setup)
  test1:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restore node_modules artifact
        uses: actions/download-artifact@v3
        with:
          name: node_modules
          path: node_modules  # Le répertoire cible pour restaurer node_modules

      - name: Run Test 1
        run: |
          echo "Executing Test 1..."
          echo "Test 1 réussi" > test1-results.txt

      - name: Upload test1 results
        uses: actions/upload-artifact@v3
        with:
          name: test1-results
          path: test1-results.txt

  # Étape Test 2 (utilise les dépendances de l'étape setup)
  test2:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restore node_modules artifact
        uses: actions/download-artifact@v3
        with:
          name: node_modules
          path: node_modules  # Le répertoire cible pour restaurer node_modules

      - name: Run Test 2
        run: |
          echo "Executing Test 2..."
          echo "Test 2 réussi" > test2-results.txt

      - name: Upload test2 results
        uses: actions/upload-artifact@v3
        with:
          name: test2-results
          path: test2-results.txt

  # Étape Deploy (conditionnelle : uniquement sur la branche main et lors d'un tag)
  deploy:
    runs-on: ubuntu-latest
    needs: [setup, test1, test2]
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download test1 results
        uses: actions/download-artifact@v3
        with:
          name: test1-results

      - name: Download test2 results
        uses: actions/download-artifact@v3
        with:
          name: test2-results

      - name: Deploy Application
        env:
          DEPLOY_ENV: ${{ vars.DEPLOY_ENV }}
        run: |
          echo "Déploiement en cours..."
          echo "Environnement de déploiement : $DEPLOY_ENV"
          echo "Déploiement réussi"
